{
  "hash": "b71c335bced91584bfb2f868d27ecc0f",
  "result": {
    "markdown": "---\ntitle: \"Introduction\"\ntitle-slide-attributes: \n  data-background-image: ../img/bg.jpg\n  data-background-size: full\nauthor: \"F. Guillaume Blanchet -- Andrew MacDonald -- Vincent Tolon \"\ndate: \"2023-05-08\"\nexecute:\n  echo: true\nformat: \n  revealjs:\n    theme: [default]\n    logo: ../img/UdeS_logo_h_rgbHR.png\n    transition: slide\n    background-transition: fade\n---\n\n\n# The very basic\n\n\n## Internet\n\n**Network : **\n\n**Password : **\n\n\n## Dos and don'ts at the Station biologique des Laurentides\n\nMeeting with Gabriel Lanthier, the lord of these premises\n\n## Course material\n\n### Website : [https://bios2.github.io/hiermod2023/](https://bios2.github.io/hiermod2023/)\n\n\nOn it, you will find the slides but also Rmarkdown files with practical examples.\n\nYou will also find course syllabus\n\nLet's take a look...\n\n\n## General daily schedule\n\n8h00 to 9h00 - Breakfast\n\n9h00 to 12h00 - Lecture/Practice\n\n12h00 to 13h00 - Lunch\n\n13h00 to 17h00 - Lecture/Practice\n\n17h00 to 17h30 - Project presentations\n\n17h30 to 18h30 - Supper\n\n# The course basics\n\n## What are hierarchical models ?\n\nFor this course, hierarchical models are regression models in which the parameters (the regression coefficients) are themselves given a probability model (Gelman and Hill 2007). \n\n## Particularities of hierarchical models\n\nHierarchical models are\n\n- A challenging bit of technology (probably more than you might think!). \n- Very flexible models (in many more ways that are usually expected!)\n- Constrained to the same particularities as (generalized) (non) linear models (sometimes to a more severe extent)\n\n## A bit of vocabulary\n\nHierarchical models, as we will see them in this course, are also known under different names\n\n  - Random effect models\n  - Mixed models\n  - Multilevel models\n  - Variance component models\n  - Error component models\n\n## A bit of vocabulary\n  \nWe decided to use the term hierachical model to prevent confusions that sometimes arises in the litterature about *random* and *fixed* effects, which are terms commonly used when referring to mixed effect models. \n\nActually, *random* and *fixed* effects have multiple definitions, which leads to confusion\n\n## A bit of vocabulary\n### Multiple Definition of *fixed* and *random* effects\n\n::: {style=\"font-size: 0.8em\"}\n[(Kreft and De Leeuw 1998)](https://methods.sagepub.com/book/introducing-multilevel-modeling) *Fixed* effects are constant and *random* effect vary\n\n[(Searl et al. 1992)](https://onlinelibrary.wiley.com/doi/book/10.1002/9780470316856) Effects are *fixed* if they are interesting in themselves or *random* if there is interest in the underlying population\n\n[(Green and Tukey 1960)](https://link.springer.com/article/10.1007/BF02288577) When a sample exhausts the population, the corresponding variable is *fixed*; when the sample is a small (i.e., negligible) part of the population the corresponding variable is *random*\n\n[(Roy LaMotte 2014)](https://doi.org/10.1002/9781118445112.stat03169) If an effect is assumed to be a realized value of a random variable, it is called a *random* effect\n\n[(Robinson 1991)](https://www.jstor.org/stable/2245695) *Fixed* effects are estimated using least squares (or, more generally, maximum likelihood) and *random* effects are estimated with shrinkage. \n:::\n\n## A bit of history\n\nBecause of the different name used for hierarchial models, the history of this subfield of statistics is a little murky, but we know that a few important figures in statistics dabbed into this field, most notably\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](https://www.bibmath.net/bios/images/fisher.jpg){fig-align='center' width=10%}\n:::\n:::\n\n\n::: {style=\"font-size: 0.5em\"}\nFisher R.A. (1919). The Correlation between Relatives on the Supposition of Mendelian Inheritance. *Transactions of the Royal Society of Edinburgh*, **52** 399--433.\n:::\n\n## Implementation\n\n- Hierarchical models have been implemented in many software packages,\n  - in R \n    - `lme4`, `brms`, `nlme`, `glmmTMB`, `MCMCglmm`, ...\n  - in SAS\n    - `MIXED`, `HPMIXED`, `GLMMIX`, ...\n  - in julia\n    - `MixedModels.jl`\n  - ...\n\n## Implementation\n\n### What we will use \n\nWe will not use any of these software packages... because under specific circumstances, what may seem like the same implementation of a model may lead to different answers... and both can actually be right ! \n\nThis is because the underlying model implemented in the software package may actually be slightly different.\n\nInstead we will implement our own models from scratch using Stan.\n\n## Good reference\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](https://xcelab.net/rm/wp-content/uploads/2019/12/sr2edcover-1-508x815.png){fig-align='center' width=30%}\n:::\n:::\n\n\nA good portion of this course material is based on this book.\n\n\n## Great technical references\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](http://www.stat.columbia.edu/~gelman/arm/cover.gif){fig-align='center' width=30%}\n:::\n:::\n\n\nEverything is there but it can gets technical !\n\n\n## R and Stan\n\nAll of the practical aspect of the course will be done with R and Stan.\n\n### RStudio\n\nWe strongly (!) encourage you to use RStudio and to start a project for the course.\n\n\n## R package to install\n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages(c(\"vegan\"))\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}